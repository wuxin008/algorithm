//AcWing
#include<iostream>
#include<cstring>
#include<queue>

using namespace std;

const int N = 10010, inf = 0x3f3f3f3f;

int n, m;
int h[N], e[N], w[N], ne[N], idx;
int dist[N], st[N], cnt[N];

void add(int a, int b, int c)
{
    e[idx] = b;
    w[idx] = c;
    ne[idx] = h[a];
    h[a] = idx++;
}

int spfa()
{
    queue<int> q;
    for (int i = 1; i <= n; ++i) {
        q.push(i);
    }
    
    while (q.size()) {
        int t = q.front();
        q.pop();
        st[t] = 0;
        
        for (int i = h[t]; i != -1; i = ne[i]) {
            int k = e[i];
            if (dist[k] > dist[t] + w[i]) {
                dist[k] = dist[t] + w[i];
                cnt[k] = cnt[t] + 1;
                if (cnt[k] >= n) return 1;
                if (!st[k]) {
                    q.push(k);
                    st[k] = 1;
                }
            }
        }
    }
    
    return 0;
}

int main()
{
    scanf("%d%d", &n, &m);
    memset(h, -1, sizeof h);
    
    for (int i = 0; i < m; ++i) {
        int a, b, w;
        scanf("%d%d%d", &a, &b, &w);
        add(a, b, w);
    }
    
    int t = spfa();
    if (t) cout << "Yes";
    else cout << "No";
    
    return 0;
}
