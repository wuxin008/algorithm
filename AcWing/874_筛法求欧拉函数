//AcWing
#include<iostream>

using namespace std;

const int N = 1000010;

typedef long long LL;

int n;
int primes[N], cnt;
int st[N], phi[N];

LL get_euler(int n)
{
    phi[1] = 1;
    for (int i = 2; i <= n; ++i) {
        if (!st[i]) {
            primes[cnt++] = i;
            phi[i] = i - 1;
        }
        for (int j = 0; primes[j] <= n / i; ++j) {
            st[primes[j] * i] = 1;
            if (i % primes[j] == 0) {
                phi[primes[j] * i] = phi[i] * primes[j];
                break;
            }
            phi[primes[j] * i] = phi[i] * (primes[j] - 1);
        }
    }
    
    LL res = 0;
    for (int i = 1; i <= n; ++i) res += phi[i];
    return res;
}

int main()
{
    scanf("%d", &n);
    
    printf("%lld", get_euler(n));
    
    return 0;
}
