//AcWing
#include<iostream>
#include<vector>
#include<algorithm>

using namespace std;

typedef pair<int, int> PII;

int n;
vector<PII> segs;

void merge(vector<PII> &segs)
{
    vector<PII> res;
    
    int st = -2e9, ed = -2e9;
    for (auto item : segs) {
        if (ed < item.first) {
            if (st != -2e9) res.push_back({st, ed});
            st = item.first, ed = item.second;
        }
        else ed = max(ed, item.second);
    }
    
    if (st != -2e9) res.push_back({st, ed});
    
    segs = res;
}

int main()
{
    cin >> n;
    for (int i = 0; i < n; ++i) {
        int l, r;
        scanf("%d %d", &l, &r);
        
        segs.push_back({l, r});
    }
    
    sort(segs.begin(), segs.end());
    
    merge(segs);
    
    cout << segs.size();
    
    return 0;
}
