//AcWing
#include<iostream>
#include<cstring>

using namespace std;

typedef long long LL;

const int N = 300010, M = 2 * N, MOD = 998244353;

int T, n, m;
int h[N], e[M], ne[M], idx;
int col[N];
int n1, n2;

void add(int a, int b)
{
    e[idx] = b;
    ne[idx] = h[a];
    h[a] = idx++;
}

int pow2(int x)
{
    int res = 1;
    while (x--) res = (LL) res * 2 % MOD;
    return res;
}

bool dfs(int u, int c)
{
    col[u] = c;
    
    if (c == 1) n1++;
    else n2++;
    
    for (int i = h[u]; i != -1; i = ne[i]) {
        int k = e[i];
        if (col[k] && col[k] != 3 - c) return false;
        if (!col[k] && !dfs(k, 3 - c)) return false;
    }
    
    return true;
}

int main()
{
    scanf("%d ", &T);
    
    while (T--) {
        int res = 1;
        
        scanf("%d %d", &n, &m);
        memset(h, -1, (n + 1) * 4);
        memset(col, 0, (n + 1) * 4);
        idx = 0;
        
        while (m--) {
            int a, b;
            scanf("%d %d", &a, &b);
            add(a, b), add(b, a);
        }
        
        for (int i = 1; i <= n; ++i) {
            n1 = 0, n2 = 0;
            if (!col[i]) {
                if (dfs(i, 1)) res = (LL) res * (pow2(n1) + pow2(n2)) % MOD;
                else {
                    res = 0;
                    break;
                }
            }
        }
    
        cout << res << endl;
    }
    
    return 0;
}
