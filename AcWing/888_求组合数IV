//AcWing
#include<iostream>
#include<vector>

using namespace std;

const int N = 5010;

int primes[N], cnt;
int st[N];
int sum[N];

void set_primes(int n) 
{
    for (int i = 2; i <= n; ++i) {
        if (!st[i]) primes[cnt++] = i;
        for (int j = 0; primes[j] <= n / i; ++j) {
            st[primes[j] * i] = 1;
            if (i % primes[j] == 0) break;
        }
    }
}

int get(int a, int p)
{
    int res = 0;
    while (a) {
        res += a / p;
        a /= p;
    }
    return res;
}

vector<int> mul(vector<int> a, int b)
{
    vector<int> res;
    
    int t = 0;
    for (int i = 0; i < a.size() || t; ++i) {
        if (i < a.size()) t += a[i] * b;
        res.push_back(t % 10);
        t /= 10;
    }
    
    while (res.size() && res.back() == 0) res.pop_back();
    
    return res;
}

int main()
{
    int a, b;
    scanf("%d%d", &a, &b);
    
    set_primes(a);
    
    for (int i = 0; i < cnt; ++i) {
        int p = primes[i];
        sum[i] = get(a, p) - get(b, p) - get(a - b, p);
    }
    
    vector<int> res;
    res.push_back(1);
    for (int i = 0; i < cnt; ++i) {
        for (int j = 0; j < sum[i]; ++j) {
            res = mul(res, primes[i]);
        }
    }
    
    for (int i = res.size() - 1; i >= 0; --i) printf("%d", res[i]);
    
    return 0;
}
