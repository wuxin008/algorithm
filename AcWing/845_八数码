//AcWing
#include<iostream>
#include<unordered_map>
#include<queue>

using namespace std;

int bfs(string start)
{
    string end = "12345678x";

    queue<string> q;
    q.push(start);

    unordered_map<string, int> dist;
    dist[start] = 0;

    int dx[4] = {0, 0, 1, -1}, dy[4] = {1, -1, 0, 0};
    while (q.size()) {
        auto t = q.front();
        q.pop();

        int distance = dist[t];

        if (t == end) return distance;

        int k = t.find('x');
        int x = k / 3, y = k % 3;
        for (int i = 0; i < 4; ++i) {
            int a = x + dx[i], b = y + dy[i];
            if (a >= 0 && a < 3 && b >= 0 && b < 3) {
                swap(t[k], t[3 * a + b]);

                if (!dist.count(t)) {
                    dist[t] = distance + 1;
                    q.push(t);
                }

                swap(t[k], t[3 * a + b]);
            }
        }
    }

    return -1;
}

int main()
{
    char ch[2];
    string start;
    for (int i = 0; i < 9; ++i) {
        scanf("%s", ch);
        start += *ch;
    }

    printf("%d\n", bfs(start));

    return 0;
}
