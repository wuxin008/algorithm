//AcWing
#include<iostream>
#include<cmath>

using namespace std;

const int N = 110;
const double zero = 1e-6;

int n;
double a[N][N];

int gauss()
{
    int r = 0;
    for (int c = 0; c < n; ++c) {
        int t = r;
        for (int i = r + 1; i < n; ++i) {
            if (fabs(a[i][c]) > fabs(a[t][c])) {
                t = i;
            }
        }
        if (fabs(a[t][c]) < zero) continue;
        for (int i = c; i < n + 1; ++i) swap(a[t][i], a[r][i]);
        for (int i = n; i >= c; --i) a[r][i] /= a[r][c];
        for (int i = r + 1; i < n; ++i) {
            if (fabs(a[i][c]) > zero) {
                for (int j = n; j >= c; --j) {
                    a[i][j] -= a[i][c] * a[r][j];
                }
            }
        }
        ++r;
    }

    if (r < n) {
        for (int i = r; i < n; ++i)
            if (fabs(a[i][n]) > zero) return 2;
        return 1;
    }

    for (int i = n - 1; i >= 0; --i) {
        for (int j = i + 1; j < n; ++j) {
            a[i][n] -= a[i][j] * a[j][n];
        }
    }
    return 0;
}

int main()
{
    scanf("%d", &n);

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n + 1; ++j) {
            scanf("%lf", &a[i][j]);
        }
    }

    int t = gauss();
    if (t == 0) for (int i = 0; i < n; ++i) printf("%.2lf\n", fabs(a[i][n]) > zero ? a[i][n] : zero);
    else if (t == 1) puts("Infinite group solutions");
    else puts("No solution");

    return 0;
}
