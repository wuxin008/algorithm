//AcWing
#include<iostream>
#include<map>

using namespace std;

typedef long long LL;

const int mod = 9901;

int n;
map<int, LL> primes;

int qmi(int a, int b, int p)
{
    int res = 1;
    while (b) {
        if (b & 1) res = (LL) res * a % p;
        a = (LL) a * a % p;
        b >>= 1;
    }
    return res;
}

LL sum(int p, int a)
{
    if (a == 0) return 1;
    
    if (a % 2) {
        return (LL) (qmi(p, a + 1 >> 1, mod) + 1) * sum(p, a >> 1) % mod;
    }
    else {
        a--;
        LL t = (LL) (qmi(p, a + 1 >> 1, mod) + 1)  * sum(p, a >> 1) % mod;
        t = (t + qmi(p, ++a, mod)) % mod;
    }
}

int main()
{
    int a, b;
    cin >> a >> b;
    
    for (int i = 2; i <= a / i; ++i) {
        while (a % i == 0) {
            primes[i] += b;
            a /= i;
        }
    }
    if (a > 1) primes[a] += b;
    
    LL res = 1;
    for (auto item : primes) {
        LL p = item.first, x = item.second;
        
        LL t = 1;
        t = sum(p, x);
        
        res = res * t % mod;
    }
    
    if (a == 0) cout << 0 << endl;
    else cout << res << endl;
    
    return 0;
}
