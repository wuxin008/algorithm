//AcWing
#include<iostream>
#include<cstring>

using namespace std;

const int N = 210, inf = 0x3f3f3f3f;

int n, m, k;
int d[N][N];

void floyd()
{
    for (int k = 1; k <= n; ++k) {
        for (int i = 1; i <= n; ++i) {
            for (int j = 1; j <= n; ++j) {
                d[i][j] = min(d[i][j], d[i][k] + d[k][j]);
            }
        }
    }
}

int main()
{
    scanf("%d%d%d", &n, &m, &k);
    memset(d, inf, sizeof d);
    for (int i = 1; i <= n; ++i) d[i][i] = 0;
    
    while (m--) {
        int a, b, w;
        scanf("%d%d%d", &a, &b, &w);
        d[a][b] = min(d[a][b], w);
    }
    
    floyd();
    
    while (k--) {
        int x, y;
        scanf("%d%d", &x, &y);
        if (d[x][y] > inf / 2) puts("impossible");
        else printf("%d\n", d[x][y]);
    }
    
    return 0;
}
