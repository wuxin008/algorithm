//AcWing
#include<iostream>
#include<cstring>
#include<queue>

using namespace std;

const int N = 100010, inf = 0x3f3f3f3f;

int n, m;
int h[N], e[N], w[N], ne[N], idx;
int dist[N], st[N];

void add(int a, int b, int c)
{
    e[idx] = b;
    w[idx] = c;
    ne[idx] = h[a];
    h[a] = idx++;
}

void spfa()
{
    memset(dist, inf, sizeof dist);
    dist[1] = 0;
    
    queue<int> q;
    q.push(1);
    st[1] = 1;
    
    while (q.size()) {
        int t = q.front();
        q.pop();
        
        st[t] = 0;
        for (int i = h[t]; i != -1; i = ne[i]) {
            int k = e[i];
            if (dist[k] > dist[t] + w[i]) {
                dist[k] = dist[t] + w[i];
                if (!st[k]) {
                    q.push(k);
                    st[k] = 1;
                }
            }
        }
    }
}

int main()
{
    scanf("%d%d", &n, &m);
    
    memset(h, -1, sizeof h);
    for (int i = 0; i < m; ++i) {
        int a, b, c;
        scanf("%d%d%d", &a, &b, &c);
        add(a, b, c);
    }
    
    spfa();
    
    if (dist[n] > inf / 2) cout << "impossible";
    else cout << dist[n];
    
    return 0;
}
