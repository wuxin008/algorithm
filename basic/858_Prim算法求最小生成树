//AcWing
#include<iostream>
#include<cstring>

using namespace std;

const int N = 510, inf = 0x3f3f3f3f;

int n, m;
int map[N][N], dist[N], st[N];

int prim()
{
    memset(dist, inf, sizeof dist);
    
    int res = 0;
    for (int i = 0; i < n; ++i) {
        int t = 0;
        for (int j = 1; j <= n; ++j) {
            if (!st[j] && dist[t] >= dist[j]) 
                t = j;
        }
        
        if (i && dist[t] == inf) return inf;
        if (i) res += dist[t];
        st[t] = 1;
        
        for (int j = 1; j <= n; ++j) dist[j] = min(dist[j], map[t][j]);
    }
    
    return res;
}

int main()
{
    scanf("%d%d", &n, &m);
    memset(map, inf, sizeof map);
    while (m--) {
        int a, b, c;
        scanf("%d%d%d", &a, &b, &c);
        map[a][b] = map[b][a] = min(map[a][b], c);
    }
    
    int t = prim();
    if (t == inf) puts("impossible");
    else printf("%d\n", t);
    
    return 0;
}
